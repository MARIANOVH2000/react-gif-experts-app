{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EAhCG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAChB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAZS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OAEnCN,EAAc,IAEdO,QAAQC,IAAI,kBAKhB,SAEI,uBAAOC,KAAK,OACXC,MAAOX,EACPY,SAnBe,SAACT,GACrBF,EAAcE,EAAEU,OAAOF,a,+BCLjBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEZG,EAFY,gBAGCA,EAAKC,OAHN,uBAGXC,EAHW,EAGXA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MAEVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAD,sDCERO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,wCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAQ,SAAC,GAAc,IAAbnB,EAAY,EAAZA,SAEnB,ECHsB,SAACA,GACvB,MAAuBhB,mBAAS,CAC5BuB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OAbAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAd,GAEFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAGlB,CAACpB,IAIIqB,EDfsBI,CAAazB,GAA7Ba,EAAb,EAAQN,KAAYa,EAApB,EAAoBA,QASpB,OARA3B,QAAQC,IAAI0B,GACZ3B,QAAQC,IAAImB,GAQR,qCACA,6BAAKb,IACJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SACUH,EAAOJ,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAGIA,GAFCA,EAAIC,aEQbe,EAxBI,WAEnB,MAAoC1C,mBAAS,CAAC,UAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAII,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEO4C,EAAWlB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCfzB4B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.fe1b0662.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst AddCategory=({setCategories})=>{\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            //para volver a ponerlo que el input sea vaCIO\r\n            setinputValue('');\r\n            // inputValue='';\r\n            console.log('Submit hecho');\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            \r\n            <input type=\"text\"\r\n             value={inputValue} \r\n             onChange={handleInputChange} />\r\n\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n\r\n}\r\nexport default AddCategory;"," export const getGifs=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=BoEDgbUX2sZWjNMZqgs38elv23xun8A4`\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n    //console.log(data)\r\n    const gifs=data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            //se pone signo de interrogacion para decir si por si no venga una imagen\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    //console.log()\r\n    return (\r\n        <div className='card  animate__bounce animate__fadeIn'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React /*, { useEffect, useState }*/ from 'react';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nexport const GifGrid=({category})=>{\r\n    // const [images,setImages]=useState([]);\r\n    const { data:images,loading}=useFetchGifs(category); \r\n    console.log(loading);\r\n    console.log(images);\r\n    // useEffect(()=>{\r\n    //     getGifs(category)\r\n    //     .then(imgs=>setImages(imgs));\r\n    // },[category])\r\n    \r\n    //getGifs();\r\n    return(\r\n        <>\r\n        <h3>{category}</h3>\r\n       { loading && <p>Loading</p> }\r\n        <div className='card-grid'>\r\n                { images.map(img=>(\r\n                   <GifGridItem\r\n                   key={img.id}\r\n                   //para pasar todo al siguiente componente\r\n                   {...img}\r\n                   />\r\n                    \r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs=(category)=>{\r\n    const [state,setState]=useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(img=>{\r\n            //aqui el setTime Out\r\n            setState({\r\n                data:img,\r\n                loading:false\r\n            });\r\n        })\r\n    },[category]);\r\n   \r\n\r\n    \r\n    return state;\r\n}","\r\n\r\nimport React,{useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp=()=>{\r\n    //const categories=['Mariano','Nicole', 'Sofia'];\r\nconst [categories, setCategories] = useState(['Sofia']);\r\n/*const handelAdd=()=>{\r\n    setCategories(cats=>[...cats,'Valeria']);\r\n}*/\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n           \r\n            <ol>\r\n               {\r\n                   categories.map(category=>(\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category} />\r\n                   )) \r\n               }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}